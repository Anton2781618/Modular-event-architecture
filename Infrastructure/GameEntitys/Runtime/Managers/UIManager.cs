using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UIElements.Experimental;

namespace ModularEventArchitecture
{
    [DefaultExecutionOrder(-149)]
    public class UIManager : ManagerEntity
    {
        /* UIManager в событийно-ориентированной архитектуре должен отвечать за:

        1)Управление состоянием UI:
            Какие окна открыты/закрыты
            Какое окно активно
            Предотвращение конфликтов между окнами

        2)Навигация по UI:
            хранить ссылки на все UI окна
            Открытие/закрытие основных окон
            Управление стеком окон (например, для вложенных меню)
            Возврат к предыдущему окну

        3)Глобальные UI события:
            Пауза игры при открытии важных окон
            Блокировка ввода при открытых окнах
            Уведомление других систем о состоянии UI

        4)Инициализация UI:
            Создание необходимых UI сущностей
            Настройка начального состояния
            Подписка на глобальные события

        UIManager НЕ должен:
            Управлять конкретной логикой UI элементов
            Обновлять данные в UI */
        protected override void Initialize()
        {
            
        }
    }
}